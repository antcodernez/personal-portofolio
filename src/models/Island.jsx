/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: nimzu (https://sketchfab.com/nimzuk)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/foxs-islands-163b68e09fcc47618450150be7785907
Title: Fox's islands
*/

import React, { useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame, useThree } from "@react-three/fiber";
import { a } from "@react-spring/three";
import islandScene from "../assets/3d/island.glb";

const Island = (props) => {
  const islandRef = useRef();
    //La función useRef() es un Hook en React que te permite crear una referencia a un valor que no se necesita para renderizar1. Aquí te dejo algunos detalles sobre su utilidad:

    // Referencia a un valor: useRef() te permite referenciar un valor que no se necesita para renderizar1. Esto es útil cuando necesitas acceder a un valor dentro de una función de efecto, pero no quieres que la función de efecto se ejecute cada vez que cambia el valor1.

    // Manipulación del DOM: useRef() también se puede usar para referenciar un elemento del DOM directamente2. Esto puede ser útil cuando necesitas interactuar con el DOM de una manera que no está soportada por React2.

    // Persistencia de datos entre renderizados: A diferencia de useState, useRef() no causa un nuevo renderizado cuando su valor cambia1. Esto lo hace útil para almacenar datos que quieres que persistan entre renderizados, pero que no necesitan causar un renderizado cuando cambian1.

  const { nodes, materials } = useGLTF(islandScene);
  
  return (
    <a.group ref={islandRef} {...props}>
      <mesh
        geometry={nodes.polySurface944_tree_body_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface945_tree1_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface946_tree2_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface947_tree1_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface948_tree_body_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface949_tree_body_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.pCube11_rocks1_0.geometry}
        material={materials.PaletteMaterial001}
      />
    </a.group>
  );
}


// El componente <mesh> en react-three-fiber representa un objeto en una escena 3D1. Aquí te dejo algunos detalles sobre las propiedades que mencionaste:

// geometry={nodes.polySurface944_tree_body_0.geometry}: Esta línea está asignando una geometría específica al objeto. En este caso, la geometría se está obteniendo de nodes.polySurface944_tree_body_0.geometry. La geometría define la forma del objeto1.

// material={materials.PaletteMaterial001}: Esta línea está asignando un material específico al objeto. En este caso, el material se está obteniendo de materials.PaletteMaterial001. El material define cómo se ve la superficie del objeto, incluyendo su color, si es brillante o mate, etc
export {Island}